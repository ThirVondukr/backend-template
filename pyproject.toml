[project]
name = ""
version = ""
description = ""
license = { text = "MIT" }
authors = [
    { name = "Doctor", email = "thirvondukr@gmail.com" },
]
requires-python = ">=3.10"
dependencies = [
    "uvloop>=0.17.0; sys_platform != 'win32'",
    "uvicorn>=0.18.3",
    "starlette>=0.20.4",
    "pydantic>=1.10.2",
    "fastapi>=0.85.1",
    "asyncpg>=0.26.0",
    "sqlalchemy>=1.4.42",
    "alembic>=1.8.1",
    "python-dotenv>=0.21.0",
    "celery>=5.2.7",
    "redis>=4.3.4",
]
[project.optional-dependencies]

[build-system]
requires = ["pdm-pep517>=1.0.0"]
build-backend = "pdm.pep517.api"

[tool]
[tool.pdm]
[tool.pdm.dev-dependencies]
dev = [
    "black>=22.10.0",
    "isort>=5.10.1",
    "mypy>=0.982",
    "pytest>=7.1.3",
    "coverage>=6.5.0",
    "httpx>=0.23.0",
    "sqlalchemy-utils>=0.38.3",
    "pytest-xdist>=2.5.0",
    "sqlalchemy2-stubs>=0.0.2a29",
    "psycopg2-binary>=2.9.4",
    "ruff>=0.0.126",
    "anyio>=3.6.2",
]

[tool.coverage.run]
source = ["src"]
omit = ["src/alembic/*"]
command_line = "-m pytest -v"
concurrency = ["greenlet"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "raise NotImplementedError",
    "if TYPE_CHECKING:",
]
show_missing = true
skip_covered = true
skip_empty = true
precision = 2

[tool.mypy]
plugins = [
    "sqlalchemy.ext.mypy.plugin",
    "pydantic.mypy",
]
exclude = "(alembic)"

follow_imports = "silent"
ignore_missing_imports = true

check_untyped_defs = true
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
disallow_any_generics = true
no_implicit_optional = true

warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
warn_unreachable = true

strict_optional = true
strict_equality = true

[tool.isort]
profile = "black"


[tool.ruff]
select = [
    "F",
    "E",
    "W",
    "C90",
    "I",  # isort
    "UP",
    "N",
    "YTT",
    "ANN",
    "S",
    "BLE",
    "FBT",
    "B",
    "A",
    "C4",
    "T10",
    "T20",
    "Q",
    "RET",
    "ARG",
    #"ERA",
    "PGH",
    "PLC",
    "PLE",
    "PLR",
    "PLW",
    "RUF100"
]
src = ["src", "tests"]
ignore = [
    "E501", # Line Length
    "A003", # Class attribute ... is shadowing a python builtin
    "ANN101",
    "ANN102",
]

[tool.ruff.per-file-ignores]
"tests/*" = ["S101"]

[tool.ruff.mccabe]
max-complexity = 6

[tool.ruff.flake8-bugbear]
extend-immutable-calls = ["fastapi.Depends"]

[tool.ruff.pep8-naming]
classmethod-decorators = ["classmethod", "pydantic.validator"]
staticmethod-decorators = ["staticmethod"]

[tool.pdm.scripts]
lint = {composite = ["black .", "isort .", "ruff .", "mypy ."]}
